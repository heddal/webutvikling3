{"version":3,"sources":["actions/DestinationAction.js","components/MainCards.js","actions/SearchAction.js","components/Searchbox.js","pages/Main.js","reducers/SortReducers.js","reducers/DestinationReducer.js","reducers/LengthReducer.js","reducers/FilterReducer.js","reducers/RootReducer.js","pages/words.js","pages/BobIsOnTheMove.js","components/BackButton.js","pages/Destination.js","components/FilterCards.js","actions/LengthAction.js","components/Sorting.js","actions/SortingActions.js","pages/SearchPage.js","actions/ContinentAction.js","pages/WordCloud.js","App.js","serviceWorker.js","index.js"],"names":["showDestination","destinationID","dispatch","getState","type","Cards","props","getDataFromDb","fetch","then","data","json","res","setState","handleButtonClick","denneID","newPopularity","updateDB","state","popularity","intervalIsSet","bind","this","interval","setInterval","clearInterval","idToUpdate","axios","post","id","update","className","map","dat","key","name","src","img","alt","style","textTransform","to","onClick","_id","Component","connect","changeSearchword","word","withRouter","filter","searchWord","prop","classes","makeStyles","theme","root","display","flexWrap","justifyContent","margin","spacing","textField","flexBasis","backgroundColor","useStyles","React","useState","search","values","setValues","TextField","clsx","variant","label","value","onChange","event","target","onKeyUp","keyPressed","keyCode","history","push","InputProps","endAdornment","InputAdornment","position","Main","Grid","container","justify","alignItems","direction","MainCards","sortReducersDefaultState","sortType","sortReducers","action","initState","destinationReducer","length","lengthReducer","continent","filterReducer","rootReducer","combineReducers","sort","destination","text","rotate","Math","random","BobIsOnTheMove","words","BackButton","handleClick","console","log","location","pathname","includes","former","xmlns","width","height","fill","viewBox","d","Destination","country","source","Paper","description","FilterCards","sortData","items","hasMoreItems","maxItems","window","addEventListener","loadMore","sorted","a","b","setTimeout","dataCards","pageStart","hasMore","useWindow","overflow","slice","setLength","Sorting","anchorEl","type1","type2","currentTarget","handleClose","handleSort","sortBy","Button","aria-controls","aria-haspopup","color","Menu","keepMounted","open","Boolean","onClose","MenuItem","SearchPage","continentFilter","activeButton","getContinent","e","activebutton","document","getElementById","padding","marginTop","marginBottom","textAlign","flexDirection","paddingLeft","paddingRight","fontFamily","borderRadius","d3","renameKeys","s","charAt","toUpperCase","i","new_data","capitalize","font","store","createStore","applyMiddleware","thunk","App","path","exact","component","WordCloud","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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ET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,YACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,aACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,aACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,eACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,eACNlC,MAAO,IAET,CACEkC,KAAM,YACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,eACNlC,MAAO,IAET,CACEkC,KAAM,KACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,WACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,WACNlC,MAAO,IAET,CACEkC,KAAM,MACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,cACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,WACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,cACNlC,MAAO,IAET,CACEkC,KAAM,WACNlC,MAAO,IAET,CACEkC,KAAM,cACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,WACNlC,MAAO,IAET,CACEkC,KAAM,aACNlC,MAAO,IAET,CACEkC,KAAM,gBACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,cACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,YACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,cACNlC,MAAO,IAET,CACEkC,KAAM,YACNlC,MAAO,IAET,CACEkC,KAAM,aACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,UACNlC,MAAO,IAET,CACEkC,KAAM,MACNlC,MAAO,IAET,CACEkC,KAAM,QACNlC,MAAO,IAET,CACEkC,KAAM,OACNlC,MAAO,IAET,CACEkC,KAAM,SACNlC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","file":"static/js/main.46953e19.chunk.js","sourcesContent":["\n\nexport const showDestination = (destinationID) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'SHOW_DESTINATION', \n            destinationID\n        })\n    \n    }\n};","import React, { Component } from 'react';\nimport './Card.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { showDestination } from '../actions/DestinationAction';\nimport axios from 'axios'\n\n\nclass Cards extends Component {\n    // initialize our state\n    constructor(props){\n      super(props)\n      this.state = {\n        data: [],\n        popularity: null,\n        intervalIsSet: false,\n      };\n\n      this.updateDB = this.updateDB.bind(this)\n\n    }\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n  getDataFromDb = () => {\n    fetch('/api/threeMostPopular/')\n      .then((data) => data.json())\n      .then((res) => this.setState({\n        data: res.data\n      }));\n  };\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB(idToUpdate, newPopularity){\n    axios.post('/api/updateData', {\n      id: idToUpdate,\n      update: { popularity: newPopularity },\n    });\n  }\n\n\n\n  // Show right destination and update the popularity of this destination\n   handleButtonClick = (denneID, newPopularity) => props =>{ \n    this.props.showDestination(denneID);\n    newPopularity++;\n    this.updateDB(denneID, newPopularity);\n  };\n\n  // Retrieve data to one card\n  render() {\n    const {data}  = this.state;\n    return (\n      <div className=\"trio\">\n      {data.map(dat => (\n        <div className = 'card-container' key={dat.name}>\n            <div className = 'card-item'>\n              <img src = {dat.img} alt=\"alt\" />\n            </div>\n            <div className = 'card-item'> <p style = {{textTransform: 'capitalize'}}>{dat.name}</p> </div>\n            <div className = 'card-item' >\n              <Link to=\"/Destination\" className='link'>\n                <button onClick={this.handleButtonClick(dat._id, dat.popularity)}>\n                  Show More\n                </button>\n              </Link>\n            </div>\n        </div>\n      ))}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showDestination: (destinationID) => dispatch(showDestination(destinationID))\n  }\n};\n\n\nexport default connect(null, mapDispatchToProps)(Cards);\n","export const changeSearchword = (word) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'CHANGE_SEARCHWORD', word,\n        })\n    }\n};","/* the search box is made with code from https://material-ui.com */\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux'\nimport { changeSearchword } from '../actions/SearchAction'\nimport { withRouter } from 'react-router-dom';\n\n\n\nconst Searchbox = (props) => {\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 500,\n    backgroundColor: 'white',\n  },\n}));\n\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        search: props.word\n    });\n\n//Adds keypressed to search to make up the search word\n  const handleChange = prop => event => { \n    setValues({ ...values, [prop]: event.target.value });\n  };\n  \n//If the key pressed is the enter-key, the searchword will be updated in store\n  const keyPressed = prop => event => { \n    if (event.keyCode === 13) { //13 is enter\n      if (values.search === \"\"){\n        props.changeSearchword(\"all\")\n      } else{\n        props.changeSearchword(values.search)}\n      props.history.push('/search/'+ values.search);\n    }\n\n  };\n\n  \n\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"search-box\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"search location\"\n        value={values.search}\n        onChange={handleChange('search')}\n        onKeyUp = {keyPressed(props.keyPressed)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon/>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeSearchword: (word) => dispatch(changeSearchword(word))\n  }\n};\n\nconst mapStateToProps = (state) => { //give us accsess to the data in store\n  const filter = state.filter\n  return {\n    word: filter.searchWord\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Searchbox));","// this is the main page\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport './Main.css';\nimport MainCards from '../components/MainCards';\nimport Searchbox from '../components/Searchbox';\n\n\nclass Main extends Component {\n    state = {  }\n    render() {\n        return (\n            <div className=\"alt\">\n                <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\"  className=\"main\">\n                    <Grid container className=\"text\">\n                        <div className=\"content\">\n                            <h3>\n                                Dream destination\n                            </h3>\n                            <h4>\n                                Where is your ultimate destination?\n                            </h4>\n                            <Searchbox/>\n                            <p>\n                              To se the most visited pages\n                              <Link to=\"/wordcloud\" className='link'>\n                                click here\n                              </Link>\n                            </p>\n                        </div>\n                    </Grid>\n                    <Grid container justify=\"center\" spacing={2}>\n                           <MainCards/>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n","// filter reducers for the locations\n\nconst sortReducersDefaultState = {\n    sortType: \"\"\n};\n\nconst sortReducers = (state = sortReducersDefaultState, action) => {\n    switch(action.type) {\n        case 'SORT_TYPE':\n            return { sortType: action.sortType };\n        default:\n            return state;\n    }\n}\n\nexport default sortReducers;\n\n","const initState = {\n    destinationID: \"\"\n}\n\nconst destinationReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'SHOW_DESTINATION':\n            return{destinationID: action.destinationID}\n        default: return state;\n    };\n}\n\nexport default destinationReducer","const initState = {\n    length: 0,\n}\n\nconst lengthReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'GET_LENGTH':\n            return{length: action.length}\n        default: return state;\n    };\n}\n\nexport default lengthReducer;","const initState = {\n    searchWord: '',\n    continent: ''\n}\n\nconst filterReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CHANGE_SEARCHWORD':\n            return {searchWord: action.word, continent: state.continent}\n        case 'CONTINENT_FILTER':\n            return {searchWord: state.searchWord, continent: action.continent} \n        default: return state\n    \n}\n}\n\nexport default filterReducer\n","import sortReducers from './SortReducers';\nimport destinationReducer from './DestinationReducer';\nimport lengthReducer from './LengthReducer';\nimport filterReducer from './FilterReducer';\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    filter: filterReducer,\n    sort: sortReducers,\n    destination: destinationReducer,\n    length: lengthReducer,\n});\n\nexport default rootReducer","export default [\n  {\n    text: 'told',\n    value: 64,\n  },\n  {\n    text: 'mistake',\n    value: 11,\n  },\n  {\n    text: 'thought',\n    value: 16,\n  },\n  {\n    text: 'bad',\n    value: 17,\n  },\n  {\n    text: 'correct',\n    value: 10,\n  },\n  {\n    text: 'day',\n    value: 54,\n  },\n  {\n    text: 'prescription',\n    value: 12,\n  },\n  {\n    text: 'time',\n    value: 77,\n  },\n  {\n    text: 'thing',\n    value: 45,\n  },\n  {\n    text: 'left',\n    value: 19,\n  },\n  {\n    text: 'pay',\n    value: 13,\n  },\n  {\n    text: 'people',\n    value: 32,\n  },\n  {\n    text: 'month',\n    value: 22,\n  },\n  {\n    text: 'again',\n    value: 35,\n  },\n  {\n    text: 'review',\n    value: 24,\n  },\n  {\n    text: 'call',\n    value: 38,\n  },\n  {\n    text: 'doctor',\n    value: 70,\n  },\n  {\n    text: 'asked',\n    value: 26,\n  },\n  {\n    text: 'finally',\n    value: 14,\n  },\n  {\n    text: 'insurance',\n    value: 29,\n  },\n  {\n    text: 'week',\n    value: 41,\n  },\n  {\n    text: 'called',\n    value: 49,\n  },\n  {\n    text: 'problem',\n    value: 20,\n  },\n  {\n    text: 'going',\n    value: 59,\n  },\n  {\n    text: 'help',\n    value: 49,\n  },\n  {\n    text: 'felt',\n    value: 45,\n  },\n  {\n    text: 'discomfort',\n    value: 11,\n  },\n  {\n    text: 'lower',\n    value: 22,\n  },\n  {\n    text: 'severe',\n    value: 12,\n  },\n  {\n    text: 'free',\n    value: 38,\n  },\n  {\n    text: 'better',\n    value: 54,\n  },\n  {\n    text: 'muscle',\n    value: 14,\n  },\n  {\n    text: 'neck',\n    value: 41,\n  },\n  {\n    text: 'root',\n    value: 24,\n  },\n  {\n    text: 'adjustment',\n    value: 16,\n  },\n  {\n    text: 'therapy',\n    value: 29,\n  },\n  {\n    text: 'injury',\n    value: 20,\n  },\n  {\n    text: 'excruciating',\n    value: 10,\n  },\n  {\n    text: 'chronic',\n    value: 13,\n  },\n  {\n    text: 'chiropractor',\n    value: 35,\n  },\n  {\n    text: 'treatment',\n    value: 59,\n  },\n  {\n    text: 'tooth',\n    value: 32,\n  },\n  {\n    text: 'chiropractic',\n    value: 17,\n  },\n  {\n    text: 'dr',\n    value: 77,\n  },\n  {\n    text: 'relief',\n    value: 19,\n  },\n  {\n    text: 'shoulder',\n    value: 26,\n  },\n  {\n    text: 'nurse',\n    value: 17,\n  },\n  {\n    text: 'room',\n    value: 22,\n  },\n  {\n    text: 'hour',\n    value: 35,\n  },\n  {\n    text: 'wait',\n    value: 38,\n  },\n  {\n    text: 'hospital',\n    value: 11,\n  },\n  {\n    text: 'eye',\n    value: 13,\n  },\n  {\n    text: 'test',\n    value: 10,\n  },\n  {\n    text: 'appointment',\n    value: 49,\n  },\n  {\n    text: 'medical',\n    value: 19,\n  },\n  {\n    text: 'question',\n    value: 20,\n  },\n  {\n    text: 'office',\n    value: 64,\n  },\n  {\n    text: 'care',\n    value: 54,\n  },\n  {\n    text: 'minute',\n    value: 29,\n  },\n  {\n    text: 'waiting',\n    value: 16,\n  },\n  {\n    text: 'patient',\n    value: 59,\n  },\n  {\n    text: 'health',\n    value: 49,\n  },\n  {\n    text: 'alternative',\n    value: 24,\n  },\n  {\n    text: 'holistic',\n    value: 19,\n  },\n  {\n    text: 'traditional',\n    value: 20,\n  },\n  {\n    text: 'symptom',\n    value: 29,\n  },\n  {\n    text: 'internal',\n    value: 17,\n  },\n  {\n    text: 'prescribed',\n    value: 26,\n  },\n  {\n    text: 'acupuncturist',\n    value: 16,\n  },\n  {\n    text: 'pain',\n    value: 64,\n  },\n  {\n    text: 'integrative',\n    value: 10,\n  },\n  {\n    text: 'herb',\n    value: 13,\n  },\n  {\n    text: 'sport',\n    value: 22,\n  },\n  {\n    text: 'physician',\n    value: 41,\n  },\n  {\n    text: 'herbal',\n    value: 11,\n  },\n  {\n    text: 'eastern',\n    value: 12,\n  },\n  {\n    text: 'chinese',\n    value: 32,\n  },\n  {\n    text: 'acupuncture',\n    value: 45,\n  },\n  {\n    text: 'prescribe',\n    value: 14,\n  },\n  {\n    text: 'medication',\n    value: 38,\n  },\n  {\n    text: 'western',\n    value: 35,\n  },\n  {\n    text: 'sure',\n    value: 38,\n  },\n  {\n    text: 'work',\n    value: 64,\n  },\n  {\n    text: 'smile',\n    value: 17,\n  },\n  {\n    text: 'teeth',\n    value: 26,\n  },\n  {\n    text: 'pair',\n    value: 11,\n  },\n  {\n    text: 'wanted',\n    value: 20,\n  },\n  {\n    text: 'frame',\n    value: 13,\n  },\n  {\n    text: 'lasik',\n    value: 10,\n  },\n  {\n    text: 'amazing',\n    value: 41,\n  },\n  {\n    text: 'fit',\n    value: 14,\n  },\n  {\n    text: 'happy',\n    value: 22,\n  },\n  {\n    text: 'feel',\n    value: 49,\n  },\n  {\n    text: 'glasse',\n    value: 19,\n  },\n  {\n    text: 'vision',\n    value: 12,\n  },\n  {\n    text: 'pressure',\n    value: 16,\n  },\n  {\n    text: 'find',\n    value: 29,\n  },\n  {\n    text: 'experience',\n    value: 59,\n  },\n  {\n    text: 'year',\n    value: 70,\n  },\n  {\n    text: 'massage',\n    value: 35,\n  },\n  {\n    text: 'best',\n    value: 54,\n  },\n  {\n    text: 'mouth',\n    value: 20,\n  },\n  {\n    text: 'staff',\n    value: 64,\n  },\n  {\n    text: 'gum',\n    value: 10,\n  },\n  {\n    text: 'chair',\n    value: 12,\n  },\n  {\n    text: 'ray',\n    value: 22,\n  },\n  {\n    text: 'dentistry',\n    value: 11,\n  },\n  {\n    text: 'canal',\n    value: 13,\n  },\n  {\n    text: 'procedure',\n    value: 32,\n  },\n  {\n    text: 'filling',\n    value: 26,\n  },\n  {\n    text: 'gentle',\n    value: 19,\n  },\n  {\n    text: 'cavity',\n    value: 17,\n  },\n  {\n    text: 'crown',\n    value: 14,\n  },\n  {\n    text: 'cleaning',\n    value: 38,\n  },\n  {\n    text: 'hygienist',\n    value: 24,\n  },\n  {\n    text: 'dental',\n    value: 59,\n  },\n  {\n    text: 'charge',\n    value: 24,\n  },\n  {\n    text: 'cost',\n    value: 29,\n  },\n  {\n    text: 'charged',\n    value: 13,\n  },\n  {\n    text: 'spent',\n    value: 17,\n  },\n  {\n    text: 'paying',\n    value: 14,\n  },\n  {\n    text: 'pocket',\n    value: 12,\n  },\n  {\n    text: 'dollar',\n    value: 11,\n  },\n  {\n    text: 'business',\n    value: 32,\n  },\n  {\n    text: 'refund',\n    value: 10,\n  },\n];\n","import React, { Component } from 'react';\nimport WordCloud from 'react-d3-cloud';\nimport words from './words';\n\nconst rotate = word => Math.random() *360;\n\nclass BobIsOnTheMove extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>This is Bob</h1>\n        <WordCloud\n          data={words}\n          rotate={rotate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BobIsOnTheMove;\n","import React, { Component } from 'react';\nimport './BackButton.css';\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n\nclass BackButton extends Component {\n\n    constructor(props){\n        super(props);\n        this.former = \"search\"\n    }\n    \n    //backarrow to go back to right path considering where you are\n    handleClick = ()  => {\n        console.log(\"former pathname: \" + this.props.location.pathname);\n        const path = this.props.location.pathname;\n        if (path.includes(\"search\")){\n            \n            this.former = \"/\"\n        } \n        else {\n            if(this.former === \"search\"){\n                this.former= \"/\";\n            }\n            this.former = \"/search\"\n        }\n        console.log(\"firmer: \" +this.former)\n    };\n\n    \n\n\n    render(){\n        return ( \n            <Link to={this.former} ><button className = \"back-button\" onClick={this.handleClick.bind(this)}> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"#999999\" viewBox=\"0 0 18 18\"><path d=\"M15 8.25H5.87l4.19-4.19L9 3 3 9l6 6 1.06-1.06-4.19-4.19H15v-1.5z\"/></svg> </button> </Link>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => { //give us accsess to the data in store\n    const filter = state\n    return {\n      word: filter\n    }\n  }  \n\nexport default withRouter(connect(mapStateToProps)(BackButton));","//Page that shows more information about the destination chosen\n\nimport React, { Component } from 'react';\nimport './Destination.css';\nimport { Grid, Paper } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport './Destination.css'\nimport BackButton from '../components/BackButton';\n\n\n\nclass Destination extends Component {\n    state = {\n        data: [],\n        id: 0,\n        name: null,\n        country: null,\n        continent: null,\n        source: null,\n        img: null\n    }\n\n    componentDidMount() {\n        this.getDataFromDb();\n        if (!this.state.intervalIsSet) {\n          let interval = setInterval(this.getDataFromDb, 1000);\n          this.setState({ intervalIsSet: interval });\n        }\n      }\n    \n      // never let a process live forever\n      // always kill a process everytime we are done using it\n      componentWillUnmount() {\n        if (this.state.intervalIsSet) {\n          clearInterval(this.state.intervalIsSet);\n          this.setState({ intervalIsSet: null });\n        }\n      }\n    \n      // our first get method that uses our backend api to\n      // fetch data from our data base\n      getDataFromDb = () => {\n        fetch('/api/getDataFrom/' + this.props.destinationID)\n          .then((data) => data.json())\n          .then((res) => this.setState({ \n            data: res.data\n          }));\n      };\n\n    render() {\n        const data = this.state.data;\n        return(\n            <div className = 'container-destination'>\n                <div className = 'back'>\n                    <BackButton/>\n                </div>\n                <Grid\n                    container\n                    spacing={8}\n                    className='papir'\n\n                >\n                    <Paper className='paper'>\n                        <div >\n                            <h2> {data.name} </h2>\n                            <h4> {data.country}, {data.continent}</h4>\n                            <div className='bilde'> \n                              <img src = {data.img} alt=\"alt\" /> \n                            </div>\n                            <p> {data.description}</p>\n                            <p >This info is retrieved from: {data.source}</p>\n                        </div>\n                    </Paper>\n                </Grid>\n                \n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => { //give us accsess to the data in store\n    return {\n      destinationID: state.destination.destinationID\n    }\n  }\n\nexport default connect(mapStateToProps)(Destination);","import React, { Component } from 'react';\nimport './Card.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { showDestination } from '../actions/DestinationAction';\nimport { setLength } from '../actions/LengthAction';\n\nclass FilterCards extends Component {\n  // initialize our state\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      intervalIsSet: false,\n      items: 20,\n      hasMoreItems: true,\n      maxItems: 0,\n      }\n      this.sortData = this.sortData.bind(this)\n  }\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    };\n    window.addEventListener('scroll', this.loadMore.bind(this), false);\n  }  \n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n  getDataFromDb = () => {\n    if (this.props.word === \"all\"){\n      if (this.props.continent === \"all\"){\n        console.log(\"IKKE HER :(((\")\n        fetch('/api/getData')\n        .then((data) => data.json())  \n        .then((res) => this.sortData(res.data));\n\n      } else {\n        fetch('/api/search/' + this.props.continent)\n        .then((data) => data.json())  \n        .then((res) => this.sortData(res.data));\n      }\n      \n    } else if (this.props.continent === 'all') {\n      console.log(\"INN HER?\")\n      fetch('/api/search/' + this.props.word)\n        .then((data) => data.json())  \n        .then((res) => this.sortData(res.data));\n  \n    } else {\n      fetch('/api/search/' + this.props.continent + '/' + this.props.word )\n      .then((data) => data.json())  \n      .then((res) => this.sortData(res.data))\n  }}\n\n  sortData(data){\n    if(this.props.sortType){\n      if(this.props.sortType === 'A-Z'){\n        const sorted = data.sort((a,b) => (a.name > b.name) ? 1:-1)\n        this.setState({data: sorted});\n      }\n      if(this.props.sortType === 'Popularity'){\n        const sorted = data.sort((a,b) => (a.popularity > b.popularity) ? -1:1)\n        this.setState({data: sorted});\n      }\n    } else{this.setState({data: data})}\n  }\n\n\n  // this will update the popularity count of the destination\n  updateDB = (idToUpdate, newPopularity) => {\n\n    axios.post('/api/updateData', {\n      id: idToUpdate,\n      update: { popularity: newPopularity },\n    });\n  };\n\n\n  // Show right destination and update the popularity of this destination\n  handleButtonClick = (denneID, newPopularity) => props =>{ \n    this.props.showDestination(denneID);\n    newPopularity++;\n    this.updateDB(denneID, newPopularity);\n  };\n\n  // to infinate scroll\n  loadMore() {\n    if (this.state.items >= this.state.maxItems){\n        this.setState({ hasMoreItems: false});\n    } else{\n        setTimeout(() => {\n        this.setState({ items: this.state.items + 20});\n    }, 1000);\n    }\n      \n  }\n\n\n  render() { \n    const {data}  = this.state;\n    const dataCards = data.map(dat => {\n      return (\n        <div className=\"trio\" key={dat._id}>\n          <div className = 'card-container' >\n              <div className = 'card-item'> <img src = {dat.img} alt=\"alt\" /> </div>\n              <div className = 'card-item'> <p> {dat.name} </p> </div>\n              <div className = 'card-item' > <Link to=\"/Destination\" className='link'><button onClick={this.handleButtonClick(dat._id, dat.popularity)}> Show More </button> </Link> </div>\n          </div> \n        </div>\n      ) ;\n    });\n    return (\n      <div >\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={this.loadMore.bind(this)}\n          hasMore={this.state.hasMoreItems}\n          useWindow = {false}\n        >\n          <div style={{display:'flex', flexWrap:'wrap', justifyContent:'center', height: \"100%\", overflow: \"scroll\"}}>\n                {dataCards.slice(0, this.state.items)}\n          </div>\n              \n          \n        </InfiniteScroll>\n      </div>);\n    \n  }\n}\n\nconst mapStateToProps = (state) => { //give us accsess to the data in store\n  const filter = state.filter\n  const sort = state.sort\n  return {\n    word: filter.searchWord,\n    continent: filter.continent,\n    sortType: sort.sortType,\n    length: state.length.length,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showDestination: (destinationID) => dispatch(showDestination(destinationID)),\n    setLength: (length) => dispatch(setLength(length))\n  }\n};\n \nexport default connect(mapStateToProps, mapDispatchToProps)(FilterCards);","export const setLength = (length) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'GET_LENGTH', \n            length\n        })\n    \n    }\n};","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { sortBy } from '../actions/SortingActions'\nimport { connect } from 'react-redux';\n\n class Sorting extends Component {\n    state= {\n        anchorEl: null,\n        sortType: '',\n        type1: 'A-Z',\n        type2: 'Popularity',\n    }\n  \n    handleClick = event => {\n      this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n      this.setState({anchorEl: null})\n    }\n  \n    handleSort = (sortType) => prop =>{\n        this.props.sortBy(sortType);\n    };\n\n  \n    render(){\n    return (\n      <div>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" color=\"primary\" variant=\"outlined\" onClick={this.handleClick}>\n          Sort by\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={this.state.anchorEl}\n          keepMounted\n          open={Boolean(this.state.anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem onClick={this.handleSort(this.state.type1)}> {this.state.type1} </MenuItem>\n          <MenuItem onClick={this.handleSort(this.state.type2)}> {this.state.type2} </MenuItem>\n        </Menu>\n      </div>\n    );\n    }\n  }\n\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n        sortBy: (sortType) => dispatch(sortBy(sortType))\n    }\n  };\n\n\n  export default connect(null, mapDispatchToProps)(Sorting);","// functions that return redux actions\n\n\n// sort by different types, ex. continent, facilities..\nexport const sortBy = (sortType) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'SORT_TYPE', \n            sortType\n        })\n    \n    }\n};","import React, { Component } from 'react';\nimport Searchbox from '../components/Searchbox'\nimport { Grid } from '@material-ui/core';\nimport FilterCards from '../components/FilterCards';\nimport { connect } from 'react-redux';\nimport BackButton from '../components/BackButton';\nimport Sorting from '../components/Sorting';\nimport { continentFilter } from '../actions/ContinentAction';\nimport { changeSearchword } from '../actions/SearchAction';\nimport './Button.css'\n\n\n\nclass SearchPage extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            items: 10,\n            hasMoreItems: true,\n            activeButton: 'all'\n        };\n        this.getContinent = this.getContinent.bind(this)\n    }\n\n  componentDidMount() {\n    if (this.props.word.length === 0){\n      this.props.changeSearchword(\"all\")\n    }\n    this.props.continentFilter(\"all\")\n  }\n\n  handleClick = (continent) => prop =>{\n      console.log(continent)\n      this.props.continentFilter(continent)\n  };\n\n    getContinent(continent, e){\n        this.props.continentFilter(continent);\n        const activebutton = this.state.activeButton\n        if (activebutton !== e.target.id){\n          document.getElementById(activebutton).className = ''\n          document.getElementById(e.target.id).className = 'active'\n          this.setState({activeButton: e.target.id});\n        }\n        \n    }\n    \n\n    render( ) { \n      return ( \n          <Grid \n            container\n            spacing={8}\n            style={{padding: 20, width: '100%', marginTop:36, marginBottom:36}}\n            direction='column'\n            justify='center'\n            alignItems='center'\n            >\n              <div style={{width:'100vw', textAlign:'center'}}>\n                <div style={{justifyContent: \"space-between\", display: 'flex', flexDirection: 'row', alignItems: 'center', paddingLeft:'3%', paddingRight: '5%'}}>\n                  <BackButton/>\n                  <h2 style={{padding:8}}> Results from \"{this.props.word}\"</h2>\n                  <Sorting />\n                </div>\n                  <Searchbox/>\n                <div className = \"button-group\" style={{textAlign: 'center', fontFamily: 'Arial, Helvetica, sans-serif', borderRadius: '10px'}}>\n                  <button className = 'active' id = 'all'  onClick = {(e) => this.getContinent('all', e)}> All </button>\n                  <button id = 'africa' onClick = {(e) => this.getContinent('Africa', e)}> Africa </button>\n                  <button id = 'america' onClick = {(e) => this.getContinent('America', e)}> America </button>\n                  <button id = 'asia' onClick = {(e) => this.getContinent('Asia', e)}> Asia </button>\n                  <button id = 'europe' onClick = {(e) => this.getContinent('Europe', e)}> Europe </button>\n                  <button id = 'oceania' onClick = {(e) => this.getContinent('Oceania', e)}> Oceania </button>\n                </div>\n              </div>\n          <FilterCards/>\n        </Grid>\n\n\n  )}}\n\nconst mapStateToProps = (state) => { //give us accsess to the data in store\n    const filter = state.filter\n    return {\n      word: filter.searchWord\n    }\n  }\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      continentFilter: (continent) => dispatch(continentFilter(continent)),\n      changeSearchword: (word) => dispatch(changeSearchword(word))\n    }\n  };\n \nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);","export const continentFilter = (continent) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: 'CONTINENT_FILTER', continent\n        })\n    }\n};","import React, { Component } from 'react';\nimport WordCloud from 'react-d3-cloud';\n\nconst fontSizeMapper = word => Math.log2(word.value) * 5 + 15;\nconst rotate = word => Math.random() *360;\n\nclass d3 extends Component {\n  state= {\n    data: [],\n  }\n\n// when component mounts, first thing it does is fetch all existing data in our db\n// then we incorporate a polling logic so that we can easily see if our db has\n// changed and implement those changes into our UI\ncomponentDidMount() {\n  this.getDataFromDb();\n}\n\n// our first get method that uses our backend api to\n// fetch data from our data base\ngetDataFromDb = () => {\n  fetch('/api/wordcloudPopularity/')\n    .then((data) => data.json())\n    .then((res) => this.renameKeys(res.data));\n};\n\n// Capitalize words\n// Eg. have cities as Rome, not rome.\ncapitalize(s) {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// WordCloud needs data on the form [{text: Rome, value: 2}, {text: Paris, value: 5}]\n// This function rename keys\nrenameKeys(data) { // list of elements [{name: Rome, popularity: 2}, {name: Paris, popularity: 5}]\n  var new_data =  [];\n  var i;\n  for (i = 0; i < data.length; i++) {\n    var d = {'text': this.capitalize(data[i]['name']), 'value': data[i]['popularity']}\n    new_data.push(d);\n  }\n  this.setState({\n    data: new_data\n  })\n}\n\n  render(){\n    return(\n      <div style={{justifyContent:\"center\", display:\"flex\", height:\"100vh\", alignItems:\"center\"}}>\n        <WordCloud\n          \n          data={this.state.data}\n          font='Impact'\n          //fontSizeMapper={fontSizeMapper}\n          rotate={rotate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default d3;\n","import React, { Component } from 'react';\nimport Main from './pages/Main';\nimport './App.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/RootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport BobIsOnTheMove from './pages/BobIsOnTheMove'\nimport Destination from './pages/Destination'\nimport SearchPage from './pages/SearchPage'\nimport WordCloud from './pages/WordCloud'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk)) ;\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store = {store}>\n          <Router>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/wordcloud\" component={WordCloud} />\n            <Route path=\"/search\" component={SearchPage} />\n            <Route path=\"/bob\" component={BobIsOnTheMove} /> {/* just for developing purposeses */}\n            <Route path=\"/destination\" component={Destination} />\n          </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}